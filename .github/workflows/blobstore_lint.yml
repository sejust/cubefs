name: BlobStore-Lint

on:
  push:
    branches:
      - master
      - main
      - release-*
    tags:
      - v*
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  GolangCI-Lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go Version 1.17.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Make compiled rocksdb includes
        run: |
          cd blobstore
          wget -O deps.tar.gz https://ocs-cn-south1.heytapcs.com/blobstore/deps.tar.gz
          tar -zxf deps.tar.gz
          mv deps .deps
          source env.sh
          echo "CGO_CFLAGS=${CGO_CFLAGS}" >> $GITHUB_ENV
          echo "CGO_LDFLAGS=${CGO_LDFLAGS}" >> $GITHUB_ENV

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.43.0

          # Optional: working directory, useful for monorepos
          working-directory: blobstore

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0 -D errcheck -D typecheck --exclude SA1019
          args: --timeout 10m --issues-exit-code=1 -D errcheck -E bodyclose ./...

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
